{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/colors/blue.js","webpack:///./node_modules/@material-ui/core/Tooltip/index.js","webpack:///./node_modules/@material-ui/icons/Info.js","webpack:///./node_modules/@material-ui/core/Tooltip/Tooltip.js","webpack:///./node_modules/@material-ui/core/Popper/index.js","webpack:///./node_modules/@material-ui/core/Popper/Popper.js","webpack:///./node_modules/popper.js/dist/esm/popper.js","webpack:///./node_modules/@material-ui/icons/utils/createSvgIcon.js"],"names":["Object","defineProperty","exports","value","default","_default","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","_interopRequireDefault","__webpack_require__","enumerable","get","_Tooltip","_react","createElement","d","styles","_extends2","_objectWithoutProperties2","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_defineProperty2","_classnames","_RootRef","_withStyles","_helpers","_Grow","_Popper","theme","popper","zIndex","tooltip","opacity","pointerEvents","popperInteractive","backgroundColor","palette","grey","borderRadius","shape","color","common","white","fontFamily","typography","padding","fontSize","pxToRem","lineHeight","concat","round","maxWidth","touch","tooltipPlacementLeft","transformOrigin","margin","breakpoints","up","tooltipPlacementRight","tooltipPlacementTop","tooltipPlacementBottom","Tooltip","_React$Component","props","_this","this","call","ignoreNonTouchEvents","onRootRef","ref","childrenRef","handleFocus","event","currentTarget","handleEnter","childrenProps","children","onFocus","_this$props","enterDelay","type","onMouseOver","setAttribute","clearTimeout","enterTimer","leaveTimer","persist","setTimeout","handleOpen","isControlled","state","open","setState","onOpen","handleLeave","_this$props2","leaveDelay","onBlur","onMouseLeave","handleClose","onClose","closeTimer","transitions","duration","shortest","handleTouchStart","_this$props3","enterTouchDelay","onTouchStart","touchTimer","handleTouchEnd","_this$props4","leaveTouchDelay","onTouchEnd","key","defaultId","Math","random","forceUpdate","focusTimer","_this2","_this$props5","classes","disableFocusListener","disableHoverListener","disableTouchListener","id","interactive","openProp","placement","PopperProps","title","TransitionComponent","TransitionProps","other","shouldShowNativeTitle","aria-describedby","className","interactiveWrapperListeners","Fragment","rootRef","cloneElement","anchorEl","transition","_ref","placementInner","TransitionPropsInner","timeout","shorter","capitalize","split","Component","defaultProps","name","withTheme","_assertThisInitialized2","_reactDom","_popper","_Portal","flipPlacement","window","document","body","getAttribute","Popper","modifiers","_this$props$popperOpt","popperOptions","disablePortal","popperNode","findDOMNode","destroy","getAnchorEl","preventOverflow","boundariesElement","onCreate","handlePopperUpdate","onUpdate","data","handleExited","exited","prevProps","container","keepMounted","placementProps","_this$state","childProps","in","onExited","onRendered","role","style","position","nextProps","r","__webpack_exports__","global","isBrowser","longerTimeoutBrowsers","timeoutDuration","i","length","navigator","userAgent","indexOf","debounce","Promise","fn","called","resolve","then","scheduled","isFunction","functionToCheck","toString","getStyleComputedProperty","element","property","nodeType","css","ownerDocument","defaultView","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","_getStyleComputedProp","overflow","overflowX","overflowY","test","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","firstElementChild","element1root","getScroll","upperSide","arguments","undefined","html","scrollingElement","getBordersSize","axis","sideA","sideB","parseFloat","getSize","computedStyle","max","parseInt","getWindowSizes","height","width","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","descriptor","configurable","writable","protoProps","staticProps","prototype","obj","_extends","assign","source","hasOwnProperty","getClientRect","offsets","right","left","bottom","top","getBoundingClientRect","rect","scrollTop","scrollLeft","e","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","subtract","modifier","includeScroll","getFixedPositionOffsetParent","parentElement","el","getBoundaries","reference","boundaries","excludeScroll","relativeOffset","innerWidth","innerHeight","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","isFixed","_getWindowSizes","isPaddingNumber","computeAutoPlacement","refRect","rects","sortedAreas","keys","map","area","sort","a","b","filteredAreas","filter","_ref2","computedPlacement","variation","getReferenceOffsets","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","runModifiers","ends","slice","prop","findIndex","cur","match","forEach","console","warn","enabled","isModifierEnabled","modifierName","some","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","getWindow","setupEventListeners","options","updateBound","addEventListener","passive","scrollElement","attachToScrollParents","callback","scrollParents","isBody","push","eventsEnabled","disableEventListeners","cancelAnimationFrame","scheduleUpdate","removeEventListener","isNumeric","n","isNaN","isFinite","setStyles","unit","isFirefox","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","placements","validPlacements","clockwise","counter","index","reverse","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","parseOffset","offset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","str","toValue","index2","Defaults","positionFixed","removeOnDestroy","shift","shiftvariation","_data$offsets","isVertical","side","shiftOffsets","transformProp","popperStyles","transform","priority","primary","escapeWithReference","secondary","min","keepTogether","floor","opSide","arrow","_data$offsets$arrow","arrowElement","querySelector","len","sideCapitalized","toLowerCase","altSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","flip","flipped","originalPlacement","placementOpposite","flipOrder","behavior","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","getOppositeVariation","inner","subtractLength","hide","bound","attributes","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","shouldRound","noRound","v","referenceWidth","popperWidth","isVariation","horizontalToInteger","verticalToInteger","getRoundedOffsets","devicePixelRatio","prefixedProperty","willChange","invertTop","invertLeft","x-placement","arrowStyles","applyStyle","removeAttribute","onLoad","modifierOptions","requestAnimationFrame","update","bind","isDestroyed","isCreated","jquery","enableEventListeners","removeChild","Utils","PopperUtils","path","displayName","memo","forwardRef","_SvgIcon","muiName"],"mappings":"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","file":"3-ca526f83414633713097.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar blue = {\n  50: '#e3f2fd',\n  100: '#bbdefb',\n  200: '#90caf9',\n  300: '#64b5f6',\n  400: '#42a5f5',\n  500: '#2196f3',\n  600: '#1e88e5',\n  700: '#1976d2',\n  800: '#1565c0',\n  900: '#0d47a1',\n  A100: '#82b1ff',\n  A200: '#448aff',\n  A400: '#2979ff',\n  A700: '#2962ff'\n};\nvar _default = blue;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _Tooltip.default;\n  }\n});\n\nvar _Tooltip = _interopRequireDefault(require(\"./Tooltip\"));","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _warning = _interopRequireDefault(require(\"warning\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _utils = require(\"@material-ui/utils\");\n\nvar _RootRef = _interopRequireDefault(require(\"../RootRef\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _helpers = require(\"../utils/helpers\");\n\nvar _Grow = _interopRequireDefault(require(\"../Grow\"));\n\nvar _Popper = _interopRequireDefault(require(\"../Popper\"));\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the Popper component. */\n    popper: {\n      zIndex: theme.zIndex.tooltip,\n      opacity: 0.9,\n      pointerEvents: 'none'\n    },\n\n    /* Styles applied to the Popper component if `interactive={true}`. */\n    popperInteractive: {\n      pointerEvents: 'auto'\n    },\n\n    /* Styles applied to the tooltip (label wrapper) element. */\n    tooltip: {\n      backgroundColor: theme.palette.grey[700],\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.common.white,\n      fontFamily: theme.typography.fontFamily,\n      padding: '4px 8px',\n      fontSize: theme.typography.pxToRem(10),\n      lineHeight: \"\".concat(theme.typography.round(14 / 10), \"em\"),\n      maxWidth: 300\n    },\n\n    /* Styles applied to the tooltip (label wrapper) element if the tooltip is opened by touch. */\n    touch: {\n      padding: '8px 16px',\n      fontSize: theme.typography.pxToRem(14),\n      lineHeight: \"\".concat(theme.typography.round(16 / 14), \"em\")\n    },\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"left\". */\n    tooltipPlacementLeft: (0, _defineProperty2.default)({\n      transformOrigin: 'right center',\n      margin: '0 24px '\n    }, theme.breakpoints.up('sm'), {\n      margin: '0 14px'\n    }),\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"right\". */\n    tooltipPlacementRight: (0, _defineProperty2.default)({\n      transformOrigin: 'left center',\n      margin: '0 24px'\n    }, theme.breakpoints.up('sm'), {\n      margin: '0 14px'\n    }),\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"top\". */\n    tooltipPlacementTop: (0, _defineProperty2.default)({\n      transformOrigin: 'center bottom',\n      margin: '24px 0'\n    }, theme.breakpoints.up('sm'), {\n      margin: '14px 0'\n    }),\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"bottom\". */\n    tooltipPlacementBottom: (0, _defineProperty2.default)({\n      transformOrigin: 'center top',\n      margin: '24px 0'\n    }, theme.breakpoints.up('sm'), {\n      margin: '14px 0'\n    })\n  };\n};\n\nexports.styles = styles;\n\nvar Tooltip =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(Tooltip, _React$Component);\n\n  function Tooltip(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Tooltip);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Tooltip).call(this));\n    _this.ignoreNonTouchEvents = false;\n\n    _this.onRootRef = function (ref) {\n      _this.childrenRef = ref;\n    };\n\n    _this.handleFocus = function (event) {\n      // Workaround for https://github.com/facebook/react/issues/7769\n      // The autoFocus of React might trigger the event before the componentDidMount.\n      // We need to account for this eventuality.\n      if (!_this.childrenRef) {\n        _this.childrenRef = event.currentTarget;\n      }\n\n      _this.handleEnter(event);\n\n      var childrenProps = _this.props.children.props;\n\n      if (childrenProps.onFocus) {\n        childrenProps.onFocus(event);\n      }\n    };\n\n    _this.handleEnter = function (event) {\n      var _this$props = _this.props,\n          children = _this$props.children,\n          enterDelay = _this$props.enterDelay;\n      var childrenProps = children.props;\n\n      if (event.type === 'mouseover' && childrenProps.onMouseOver) {\n        childrenProps.onMouseOver(event);\n      }\n\n      if (_this.ignoreNonTouchEvents && event.type !== 'touchstart') {\n        return;\n      } // Remove the title ahead of time.\n      // We don't want to wait for the next render commit.\n      // We would risk displaying two tooltips at the same time (native + this one).\n\n\n      _this.childrenRef.setAttribute('title', '');\n\n      clearTimeout(_this.enterTimer);\n      clearTimeout(_this.leaveTimer);\n\n      if (enterDelay) {\n        event.persist();\n        _this.enterTimer = setTimeout(function () {\n          _this.handleOpen(event);\n        }, enterDelay);\n      } else {\n        _this.handleOpen(event);\n      }\n    };\n\n    _this.handleOpen = function (event) {\n      // The mouseover event will trigger for every nested element in the tooltip.\n      // We can skip rerendering when the tooltip is already open.\n      // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.\n      if (!_this.isControlled && !_this.state.open) {\n        _this.setState({\n          open: true\n        });\n      }\n\n      if (_this.props.onOpen) {\n        _this.props.onOpen(event);\n      }\n    };\n\n    _this.handleLeave = function (event) {\n      var _this$props2 = _this.props,\n          children = _this$props2.children,\n          leaveDelay = _this$props2.leaveDelay;\n      var childrenProps = children.props;\n\n      if (event.type === 'blur' && childrenProps.onBlur) {\n        childrenProps.onBlur(event);\n      }\n\n      if (event.type === 'mouseleave' && childrenProps.onMouseLeave) {\n        childrenProps.onMouseLeave(event);\n      }\n\n      clearTimeout(_this.enterTimer);\n      clearTimeout(_this.leaveTimer);\n\n      if (leaveDelay) {\n        event.persist();\n        _this.leaveTimer = setTimeout(function () {\n          _this.handleClose(event);\n        }, leaveDelay);\n      } else {\n        _this.handleClose(event);\n      }\n    };\n\n    _this.handleClose = function (event) {\n      if (!_this.isControlled) {\n        _this.setState({\n          open: false\n        });\n      }\n\n      if (_this.props.onClose) {\n        _this.props.onClose(event);\n      }\n\n      clearTimeout(_this.closeTimer);\n      _this.closeTimer = setTimeout(function () {\n        _this.ignoreNonTouchEvents = false;\n      }, _this.props.theme.transitions.duration.shortest);\n    };\n\n    _this.handleTouchStart = function (event) {\n      _this.ignoreNonTouchEvents = true;\n      var _this$props3 = _this.props,\n          children = _this$props3.children,\n          enterTouchDelay = _this$props3.enterTouchDelay;\n\n      if (children.props.onTouchStart) {\n        children.props.onTouchStart(event);\n      }\n\n      clearTimeout(_this.leaveTimer);\n      clearTimeout(_this.closeTimer);\n      clearTimeout(_this.touchTimer);\n      event.persist();\n      _this.touchTimer = setTimeout(function () {\n        _this.handleEnter(event);\n      }, enterTouchDelay);\n    };\n\n    _this.handleTouchEnd = function (event) {\n      var _this$props4 = _this.props,\n          children = _this$props4.children,\n          leaveTouchDelay = _this$props4.leaveTouchDelay;\n\n      if (children.props.onTouchEnd) {\n        children.props.onTouchEnd(event);\n      }\n\n      clearTimeout(_this.touchTimer);\n      clearTimeout(_this.leaveTimer);\n      event.persist();\n      _this.leaveTimer = setTimeout(function () {\n        _this.handleClose(event);\n      }, leaveTouchDelay);\n    };\n\n    _this.isControlled = props.open != null;\n    _this.state = {\n      open: null\n    };\n\n    if (!_this.isControlled) {\n      // not controlled, use internal state\n      _this.state.open = false;\n    }\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Tooltip, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(!this.childrenRef.disabled || this.childrenRef.disabled && this.props.title === '' || this.childrenRef.tagName.toLowerCase() !== 'button', ['Material-UI: you are providing a disabled `button` child to the Tooltip component.', 'A disabled element does not fire events.', \"Tooltip needs to listen to the child element's events to display the title.\", '', 'Place a `div` container on top of the element.'].join('\\n')) : void 0; // Fallback to this default id when possible.\n      // Use the random value for client side rendering only.\n      // We can't use it server-side.\n\n      this.defaultId = \"mui-tooltip-\".concat(Math.round(Math.random() * 1e5)); // Rerender with this.defaultId and this.childrenRef.\n\n      if (this.props.open) {\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.closeTimer);\n      clearTimeout(this.enterTimer);\n      clearTimeout(this.focusTimer);\n      clearTimeout(this.leaveTimer);\n      clearTimeout(this.touchTimer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          children = _this$props5.children,\n          classes = _this$props5.classes,\n          disableFocusListener = _this$props5.disableFocusListener,\n          disableHoverListener = _this$props5.disableHoverListener,\n          disableTouchListener = _this$props5.disableTouchListener,\n          enterDelay = _this$props5.enterDelay,\n          enterTouchDelay = _this$props5.enterTouchDelay,\n          id = _this$props5.id,\n          interactive = _this$props5.interactive,\n          leaveDelay = _this$props5.leaveDelay,\n          leaveTouchDelay = _this$props5.leaveTouchDelay,\n          onClose = _this$props5.onClose,\n          onOpen = _this$props5.onOpen,\n          openProp = _this$props5.open,\n          placement = _this$props5.placement,\n          PopperProps = _this$props5.PopperProps,\n          theme = _this$props5.theme,\n          title = _this$props5.title,\n          TransitionComponent = _this$props5.TransitionComponent,\n          TransitionProps = _this$props5.TransitionProps,\n          other = (0, _objectWithoutProperties2.default)(_this$props5, [\"children\", \"classes\", \"disableFocusListener\", \"disableHoverListener\", \"disableTouchListener\", \"enterDelay\", \"enterTouchDelay\", \"id\", \"interactive\", \"leaveDelay\", \"leaveTouchDelay\", \"onClose\", \"onOpen\", \"open\", \"placement\", \"PopperProps\", \"theme\", \"title\", \"TransitionComponent\", \"TransitionProps\"]);\n      var open = this.isControlled ? openProp : this.state.open; // There is no point in displaying an empty tooltip.\n\n      if (title === '') {\n        open = false;\n      } // For accessibility and SEO concerns, we render the title to the DOM node when\n      // the tooltip is hidden. However, we have made a tradeoff when\n      // `disableHoverListener` is set. This title logic is disabled.\n      // It's allowing us to keep the implementation size minimal.\n      // We are open to change the tradeoff.\n\n\n      var shouldShowNativeTitle = !open && !disableHoverListener;\n      var childrenProps = (0, _extends2.default)({\n        'aria-describedby': open ? id || this.defaultId : null,\n        title: shouldShowNativeTitle && typeof title === 'string' ? title : null\n      }, other, children.props, {\n        className: (0, _classnames.default)(other.className, children.props.className)\n      });\n\n      if (!disableTouchListener) {\n        childrenProps.onTouchStart = this.handleTouchStart;\n        childrenProps.onTouchEnd = this.handleTouchEnd;\n      }\n\n      if (!disableHoverListener) {\n        childrenProps.onMouseOver = this.handleEnter;\n        childrenProps.onMouseLeave = this.handleLeave;\n      }\n\n      if (!disableFocusListener) {\n        childrenProps.onFocus = this.handleFocus;\n        childrenProps.onBlur = this.handleLeave;\n      }\n\n      var interactiveWrapperListeners = interactive ? {\n        onMouseOver: childrenProps.onMouseOver,\n        onMouseLeave: childrenProps.onMouseLeave,\n        onFocus: childrenProps.onFocus,\n        onBlur: childrenProps.onBlur\n      } : {};\n      process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(!children.props.title, ['Material-UI: you have provided a `title` property to the child of <Tooltip />.', \"Remove this title property `\".concat(children.props.title, \"` or the Tooltip component.\")].join('\\n')) : void 0;\n      return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_RootRef.default, {\n        rootRef: this.onRootRef\n      }, _react.default.cloneElement(children, childrenProps)), _react.default.createElement(_Popper.default, (0, _extends2.default)({\n        className: (0, _classnames.default)(classes.popper, (0, _defineProperty2.default)({}, classes.popperInteractive, interactive)),\n        placement: placement,\n        anchorEl: this.childrenRef,\n        open: open,\n        id: childrenProps['aria-describedby'],\n        transition: true\n      }, interactiveWrapperListeners, PopperProps), function (_ref) {\n        var placementInner = _ref.placement,\n            TransitionPropsInner = _ref.TransitionProps;\n        return _react.default.createElement(TransitionComponent, (0, _extends2.default)({\n          timeout: theme.transitions.duration.shorter\n        }, TransitionPropsInner, TransitionProps), _react.default.createElement(\"div\", {\n          className: (0, _classnames.default)(classes.tooltip, (0, _defineProperty2.default)({}, classes.touch, _this2.ignoreNonTouchEvents), classes[\"tooltipPlacement\".concat((0, _helpers.capitalize)(placementInner.split('-')[0]))])\n        }, title));\n      }));\n    }\n  }]);\n  return Tooltip;\n}(_react.default.Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Tooltip.propTypes = {\n  /**\n   * Tooltip reference element.\n   */\n  children: _propTypes.default.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * Do not respond to focus events.\n   */\n  disableFocusListener: _propTypes.default.bool,\n\n  /**\n   * Do not respond to hover events.\n   */\n  disableHoverListener: _propTypes.default.bool,\n\n  /**\n   * Do not respond to long press touch events.\n   */\n  disableTouchListener: _propTypes.default.bool,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip.\n   * This property won't impact the enter touch delay (`enterTouchDelay`).\n   */\n  enterDelay: _propTypes.default.number,\n\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   */\n  enterTouchDelay: _propTypes.default.number,\n\n  /**\n   * The relationship between the tooltip and the wrapper component is not clear from the DOM.\n   * This property is used with aria-describedby to solve the accessibility issue.\n   * If you don't provide this property. It falls back to a randomly generated id.\n   */\n  id: _propTypes.default.string,\n\n  /**\n   * Makes a tooltip interactive, i.e. will not close when the user\n   * hovers over the tooltip before the `leaveDelay` is expired.\n   */\n  interactive: _propTypes.default.bool,\n\n  /**\n   * The number of milliseconds to wait before hiding the tooltip.\n   * This property won't impact the leave touch delay (`leaveTouchDelay`).\n   */\n  leaveDelay: _propTypes.default.number,\n\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   */\n  leaveTouchDelay: _propTypes.default.number,\n\n  /**\n   * Callback fired when the tooltip requests to be closed.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onClose: _propTypes.default.func,\n\n  /**\n   * Callback fired when the tooltip requests to be open.\n   *\n   * @param {object} event The event source of the callback\n   */\n  onOpen: _propTypes.default.func,\n\n  /**\n   * If `true`, the tooltip is shown.\n   */\n  open: _propTypes.default.bool,\n\n  /**\n   * Tooltip placement.\n   */\n  placement: _propTypes.default.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * Properties applied to the [`Popper`](/api/popper/) element.\n   */\n  PopperProps: _propTypes.default.object,\n\n  /**\n   * @ignore\n   */\n  theme: _propTypes.default.object.isRequired,\n\n  /**\n   * Tooltip title. Zero-length titles string are never displayed.\n   */\n  title: _propTypes.default.node.isRequired,\n\n  /**\n   * The component used for the transition.\n   */\n  TransitionComponent: _utils.componentPropType,\n\n  /**\n   * Properties applied to the `Transition` element.\n   */\n  TransitionProps: _propTypes.default.object\n} : void 0;\nTooltip.defaultProps = {\n  disableFocusListener: false,\n  disableHoverListener: false,\n  disableTouchListener: false,\n  enterDelay: 0,\n  enterTouchDelay: 1000,\n  interactive: false,\n  leaveDelay: 0,\n  leaveTouchDelay: 1500,\n  placement: 'bottom',\n  TransitionComponent: _Grow.default\n};\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiTooltip',\n  withTheme: true\n})(Tooltip);\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _Popper.default;\n  }\n});\n\nvar _Popper = _interopRequireDefault(require(\"./Popper\"));","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _popper = _interopRequireDefault(require(\"popper.js\"));\n\nvar _Portal = _interopRequireDefault(require(\"../Portal\"));\n\nfunction flipPlacement(placement) {\n  var direction = typeof window !== 'undefined' && document.body.getAttribute('dir') || 'ltr';\n\n  if (direction !== 'rtl') {\n    return placement;\n  }\n\n  switch (placement) {\n    case 'bottom-end':\n      return 'bottom-start';\n\n    case 'bottom-start':\n      return 'bottom-end';\n\n    case 'top-end':\n      return 'top-start';\n\n    case 'top-start':\n      return 'top-end';\n\n    default:\n      return placement;\n  }\n}\n\nfunction getAnchorEl(anchorEl) {\n  return typeof anchorEl === 'function' ? anchorEl() : anchorEl;\n}\n/**\n * Poppers rely on the 3rd party library [Popper.js](https://github.com/FezVrasta/popper.js) for positioning.\n */\n\n\nvar Popper =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(Popper, _React$Component);\n\n  function Popper(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Popper);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Popper).call(this));\n\n    _this.handleOpen = function () {\n      var _this$props = _this.props,\n          anchorEl = _this$props.anchorEl,\n          modifiers = _this$props.modifiers,\n          open = _this$props.open,\n          placement = _this$props.placement,\n          _this$props$popperOpt = _this$props.popperOptions,\n          popperOptions = _this$props$popperOpt === void 0 ? {} : _this$props$popperOpt,\n          disablePortal = _this$props.disablePortal;\n\n      var popperNode = _reactDom.default.findDOMNode((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n\n      if (!popperNode || !anchorEl || !open) {\n        return;\n      }\n\n      if (_this.popper) {\n        _this.popper.destroy();\n\n        _this.popper = null;\n      }\n\n      _this.popper = new _popper.default(getAnchorEl(anchorEl), popperNode, (0, _extends2.default)({\n        placement: flipPlacement(placement)\n      }, popperOptions, {\n        modifiers: (0, _extends2.default)({}, disablePortal ? {} : {\n          // It's using scrollParent by default, we can use the viewport when using a portal.\n          preventOverflow: {\n            boundariesElement: 'window'\n          }\n        }, modifiers, popperOptions.modifiers),\n        // We could have been using a custom modifier like react-popper is doing.\n        // But it seems this is the best public API for this use case.\n        onCreate: _this.handlePopperUpdate,\n        onUpdate: _this.handlePopperUpdate\n      }));\n    };\n\n    _this.handlePopperUpdate = function (data) {\n      if (data.placement !== _this.state.placement) {\n        _this.setState({\n          placement: data.placement\n        });\n      }\n    };\n\n    _this.handleExited = function () {\n      _this.setState({\n        exited: true\n      });\n\n      _this.handleClose();\n    };\n\n    _this.handleClose = function () {\n      if (!_this.popper) {\n        return;\n      }\n\n      _this.popper.destroy();\n\n      _this.popper = null;\n    };\n\n    _this.state = {\n      exited: !props.open\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(Popper, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.open !== this.props.open && !this.props.open && !this.props.transition) {\n        // Otherwise handleExited will call this.\n        this.handleClose();\n      } // Let's update the popper position.\n\n\n      if (prevProps.open !== this.props.open || prevProps.anchorEl !== this.props.anchorEl || prevProps.popperOptions !== this.props.popperOptions || prevProps.modifiers !== this.props.modifiers || prevProps.disablePortal !== this.props.disablePortal || prevProps.placement !== this.props.placement) {\n        this.handleOpen();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.handleClose();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          anchorEl = _this$props2.anchorEl,\n          children = _this$props2.children,\n          container = _this$props2.container,\n          disablePortal = _this$props2.disablePortal,\n          keepMounted = _this$props2.keepMounted,\n          modifiers = _this$props2.modifiers,\n          open = _this$props2.open,\n          placementProps = _this$props2.placement,\n          popperOptions = _this$props2.popperOptions,\n          transition = _this$props2.transition,\n          other = (0, _objectWithoutProperties2.default)(_this$props2, [\"anchorEl\", \"children\", \"container\", \"disablePortal\", \"keepMounted\", \"modifiers\", \"open\", \"placement\", \"popperOptions\", \"transition\"]);\n      var _this$state = this.state,\n          exited = _this$state.exited,\n          placement = _this$state.placement;\n\n      if (!keepMounted && !open && (!transition || exited)) {\n        return null;\n      }\n\n      var childProps = {\n        placement: placement || flipPlacement(placementProps)\n      };\n\n      if (transition) {\n        childProps.TransitionProps = {\n          in: open,\n          onExited: this.handleExited\n        };\n      }\n\n      return _react.default.createElement(_Portal.default, {\n        onRendered: this.handleOpen,\n        disablePortal: disablePortal,\n        container: container\n      }, _react.default.createElement(\"div\", (0, _extends2.default)({\n        role: \"tooltip\",\n        style: {\n          // Prevents scroll issue, waiting for Popper.js to add this style once initiated.\n          position: 'absolute'\n        }\n      }, other), typeof children === 'function' ? children(childProps) : children));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if (nextProps.open) {\n        return {\n          exited: false\n        };\n      }\n\n      if (!nextProps.transition) {\n        // Otherwise let handleExited take care of marking exited.\n        return {\n          exited: true\n        };\n      }\n\n      return null;\n    }\n  }]);\n  return Popper;\n}(_react.default.Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Popper.propTypes = {\n  /**\n   * This is the DOM element, or a function that returns the DOM element,\n   * that may be used to set the position of the popover.\n   * The return value will passed as the reference object of the Popper\n   * instance.\n   */\n  anchorEl: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),\n\n  /**\n   * Popper render function or node.\n   */\n  children: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.func]).isRequired,\n\n  /**\n   * A node, component instance, or function that returns either.\n   * The `container` will passed to the Modal component.\n   * By default, it uses the body of the anchorEl's top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: _propTypes.default.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This property can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Popper.\n   */\n  keepMounted: _propTypes.default.bool,\n\n  /**\n   * Popper.js is based on a \"plugin-like\" architecture,\n   * most of its features are fully encapsulated \"modifiers\".\n   *\n   * A modifier is a function that is called each time Popper.js needs to\n   * compute the position of the popper.\n   * For this reason, modifiers should be very performant to avoid bottlenecks.\n   * To learn how to create a modifier, [read the modifiers documentation](https://github.com/FezVrasta/popper.js/blob/master/docs/_includes/popper-documentation.md#modifiers--object).\n   */\n  modifiers: _propTypes.default.object,\n\n  /**\n   * If `true`, the popper is visible.\n   */\n  open: _propTypes.default.bool.isRequired,\n\n  /**\n   * Popper placement.\n   */\n  placement: _propTypes.default.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * Options provided to the [`popper.js`](https://github.com/FezVrasta/popper.js) instance.\n   */\n  popperOptions: _propTypes.default.object,\n\n  /**\n   * Help supporting a react-transition-group/Transition component.\n   */\n  transition: _propTypes.default.bool\n} : void 0;\nPopper.defaultProps = {\n  disablePortal: false,\n  placement: 'bottom',\n  transition: false\n};\nvar _default = Popper;\nexports.default = _default;","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.15.0\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var window = element.ownerDocument.defaultView;\n  var css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n}\n\nfunction getWindowSizes(document) {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  var parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  var isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var window = element.ownerDocument.defaultView;\n  var styles = window.getComputedStyle(element);\n  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nfunction getRoundedOffsets(data, shouldRound) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var round = Math.round,\n      floor = Math.floor;\n\n  var noRound = function noRound(v) {\n    return v;\n  };\n\n  var referenceWidth = round(reference.width);\n  var popperWidth = round(popper.width);\n\n  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  var isVariation = data.placement.indexOf('-') !== -1;\n  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\n  var verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right)\n  };\n}\n\nvar isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    // flips variation if popper content overflows boundaries\n    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);\n\n    var flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedules an update. It will run on the next UI update available.\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nexport default Popper;\n//# sourceMappingURL=popper.js.map\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createSvgIcon;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _SvgIcon = _interopRequireDefault(require(\"@material-ui/core/SvgIcon\"));\n\nfunction createSvgIcon(path, displayName) {\n  var Component = _react.default.memo(_react.default.forwardRef(function (props, ref) {\n    return _react.default.createElement(_SvgIcon.default, (0, _extends2.default)({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = _SvgIcon.default.muiName;\n  return Component;\n}"],"sourceRoot":""}