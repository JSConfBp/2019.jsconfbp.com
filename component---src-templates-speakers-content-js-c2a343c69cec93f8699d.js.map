{"version":3,"sources":["webpack:///./src/components/SketchNote/index.js","webpack:///./src/templates/speakers-content.js","webpack:///./src/components/Layout/index.js","webpack:///./node_modules/core-js/modules/es6.object.keys.js","webpack:///./node_modules/core-js/modules/_object-sap.js","webpack:///./node_modules/gatsby-mdx/mdx-renderer.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js","webpack:///./src/components/YoutubeVideo/index.js"],"names":["SpeakerImage","_ref","alt","image","_ref$className","className","react_default","a","createElement","gatsby_browser_entry","query","render","data","source","edges","filter","_ref2","node","childImageSharp","fluid","src","includes","map","_ref3","i","classnames","styles","sketchnote","key","href","gatsby_image_default","credit","_2494483320","Link","props","url","text","rel","SpeakersContentTemplate","mdx","_mdx$frontmatter","frontmatter","title","name","bio","color","from","link","twitter","github","company","company_url","youtube","Layout","SocialMeta","description","lead","socialCard","classNames","simpleText","speakerStyles","speakerpage","title_column","speaker_name","speaker_column","components_SpeakerImage","speaker_profile","links","link_from","speakers_content_Link","link_blog","twhandle","link_twitter","link_github","link_company","talk_column","YoutubeVideo","video","SketchNote","mdx_renderer_default","code","body","pageQuery","MainLayout","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","grid2","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","site","siteMetadata","meta","content","keywords","lang","_Header___WEBPACK_IMPORTED_MODULE_7__","main","concat","mainClassNames","join","children","footer","_Footer___WEBPACK_IMPORTED_MODULE_6__","_public_static_d_724794514_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","isRequired","array","defaultProps","toObject","__webpack_require__","$keys","it","$export","core","fails","module","exports","KEY","exec","fn","Object","exp","S","F","React","require","useMDXComponents","useMDXScope","scope","components","_objectWithoutPropertiesLoose","mdxComponents","mdxScope","End","useMemo","fullScope","_objectSpread","keys","values","_construct","Function","apply","setPrototypeOf","Parent","args","Class","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","isNativeReflectConstruct","push","instance","bind","arguments","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","_styles_module_scss__WEBPACK_IMPORTED_MODULE_2__","_styles_module_scss__WEBPACK_IMPORTED_MODULE_2___default","frameBorder","allow","allowFullScreen"],"mappings":"uRAqDeA,EA/CM,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,IAAKC,EAARF,EAAQE,MAARC,EAAAH,EAAeI,iBAAf,IAAAD,EAA2B,GAA3BA,EAAA,OACnBE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAK,aAiBLC,OAAQ,SAAAC,GACN,OAAOA,EAAKC,OAAOC,MAChBC,OAAO,SAAAC,GAEN,OAFoBA,EAAXC,KACYC,gBAAgBC,MAA7BC,IACGC,SAASlB,KAErBmB,IAAI,SAAAC,EAAWC,GAAX,IAAGP,EAAHM,EAAGN,KAAH,OACHX,EAAAC,EAAAC,cAAA,OACEH,UAAWoB,IAAWC,IAAOC,WAAYtB,GACzCuB,IAAG,cAAgBJ,GAEnBlB,EAAAC,EAAAC,cAAA,KAAGqB,KAAMZ,EAAKC,gBAAgBC,MAAMC,KAClCd,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CACEY,MAAOF,EAAKC,gBAAgBC,MAC5BjB,IACEA,GAAG,iEAKTI,EAAAC,EAAAC,cAAA,QAAMH,UAAWqB,IAAOK,QAAxB,kBACiBzB,EAAAC,EAAAC,cAAA,KAAGqB,KAAK,yBAAR,YADjB,SAtCVjB,KAAAoB,iFCOF,IAWMC,EAAO,SAAAC,GAAS,IACZC,EAAcD,EAAdC,IAAKC,EAASF,EAATE,KAEb,OACE9B,EAAAC,EAAAC,cAAA,KAAGqB,KAAMM,EAAKE,IAAI,YACfD,IAuGQE,UAnGf,SAAArC,GAAoD,IAATsC,EAAStC,EAAjBW,KAAQ2B,IAASC,EAe9CD,EAAIE,YAbNC,EAFgDF,EAEhDE,MACAC,EAHgDH,EAGhDG,KACAC,EAJgDJ,EAIhDI,IACAzC,EALgDqC,EAKhDrC,MACA0C,EANgDL,EAMhDK,MACAC,EAPgDN,EAOhDM,KACAC,EARgDP,EAQhDO,KACAC,EATgDR,EAShDQ,QACAC,EAVgDT,EAUhDS,OACAC,EAXgDV,EAWhDU,QACAC,EAZgDX,EAYhDW,YACAC,EAbgDZ,EAahDY,QACAzB,EAdgDa,EAchDb,WAGF,OACErB,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,KACE/C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CACEZ,MAAOH,EAAIE,YAAYC,MACvBa,YAAahB,EAAIE,YAAYe,KAC7BrD,MAAOoC,EAAIE,YAAYgB,YAAc,oBAEvCnD,EAAAC,EAAAC,cAAA,OAAKH,UAAWqD,IAAWhC,IAAOiC,aAChCrD,EAAAC,EAAAC,cAAA,OAAKH,UAAWuD,IAAcC,aAC5BvD,EAAAC,EAAAC,cAAA,OAAKH,UAAWuD,IAAcE,cAC5BxD,EAAAC,EAAAC,cAAA,MAAIH,UAAWuD,IAAcG,cAAepB,GAC5CrC,EAAAC,EAAAC,cAAA,UAAKkC,IAEPpC,EAAAC,EAAAC,cAAA,OAAKH,UAAWuD,IAAcI,gBAC5B1D,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CACE5D,UAAWuD,IAAcM,gBACzB/D,MAAOA,EACP0C,MAAOA,IAGTvC,EAAAC,EAAAC,cAAA,MAAIH,UAAWuD,IAAcO,OAC3B7D,EAAAC,EAAAC,cAAA,MAAIH,UAAWuD,IAAcQ,WAC3B9D,EAAAC,EAAAC,cAAC6D,EAAD,CACElC,IAAG,sCAAwCW,EAC3CV,KAAMU,KAGTC,GACCzC,EAAAC,EAAAC,cAAA,MAAIH,UAAWuD,IAAcU,WAC3BhE,EAAAC,EAAAC,cAAC6D,EAAD,CAAMlC,IAAKY,EAAMX,KAAK,aAGzBY,GACCA,EAAQ1B,IAAI,SAAAiD,GAAQ,OAClBjE,EAAAC,EAAAC,cAAA,MAAIH,UAAWuD,IAAcY,aAAc5C,IAAK2C,GAC9CjE,EAAAC,EAAAC,cAAC6D,EAAD,CACElC,IAAG,uBAAyBoC,EAC5BnC,KAAI,IAAMmC,OAIjBtB,GACC3C,EAAAC,EAAAC,cAAA,MAAIH,UAAWuD,IAAca,aAC3BnE,EAAAC,EAAAC,cAAC6D,EAAD,CAAMlC,IAAG,sBAAwBc,EAAUb,KAAMa,KAGpDC,GACC5C,EAAAC,EAAAC,cAAA,MAAIH,UAAWuD,IAAcc,cAC3BpE,EAAAC,EAAAC,cAAC6D,EAAD,CAAMlC,IAAKgB,EAAaf,KAAMc,OAKtC5C,EAAAC,EAAAC,cAAA,OAAKH,UAAWuD,IAAce,aAC3BvB,GACC9C,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACExD,IAAKgC,EACLV,MAAUA,EAAL,OAAiBC,EACtBtC,UAAWuD,IAAciB,QAI5BlD,GACCrB,EAAAC,EAAAC,cAACsE,EAAD,CACE5E,IAAG,mDAAqDyC,EACxDxC,MAAOwB,EACPtB,UAAWuD,IAAcjC,aAI7BrB,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,KAAcgC,EAAIyC,KAAKC,MAEtBrC,GAAOtC,EAAAC,EAAAC,cAAA,WAEPoC,OAQEN,IAEF4C,EAAS,0JC9HhBC,EAAa,SAAAjD,GAAK,OACtBkD,EAAA7E,EAAAC,cAAC6E,EAAA,EAAD,CACE3E,MAAK,YAWLC,OAAQ,SAAAC,GAAI,OACVwE,EAAA7E,EAAAC,cAAA,OAAKH,UAAWqB,IAAO4D,OACrBF,EAAA7E,EAAAC,cAAC+E,EAAAhF,EAAD,CACEmC,MAAO9B,EAAK4E,KAAKC,aAAa/C,MAC9BgD,KAAM,CACJ,CACE/C,KAAM,cACNgD,QAAS/E,EAAK4E,KAAKC,aAAalC,aAElC,CAAEZ,KAAM,WAAYgD,QAAS/E,EAAK4E,KAAKC,aAAaG,YAGtDR,EAAA7E,EAAAC,cAAA,QAAMqF,KAAK,QAEbT,EAAA7E,EAAAC,cAACsF,EAAA,EAAD,MACAV,EAAA7E,EAAAC,cAAA,QAAMH,UAAW,CAACqB,IAAOqE,MAARC,OAAiB9D,EAAM+D,gBAAgBC,KAAK,MAC1DhE,EAAMiE,UAETf,EAAA7E,EAAAC,cAAA,UAAQH,UAAWqB,IAAO0E,QACxBhB,EAAA7E,EAAAC,cAAC6F,EAAA,EAAD,SA/BRzF,KAAA0F,KAsCFnB,EAAWoB,UAAY,CACrBJ,SAAUK,IAAUvF,KAAKwF,WACzBR,eAAgBO,IAAUE,OAG5BvB,EAAWwB,aAAe,CACxBV,eAAgB,IAGHd,gYCxDf,IAAAyB,EAAeC,EAAQ,IACvBC,EAAYD,EAAQ,IAEpBA,EAAQ,IAARA,CAAuB,kBACvB,gBAAAE,GACA,OAAAD,EAAAF,EAAAG,4BCLA,IAAAC,EAAcH,EAAQ,IACtBI,EAAWJ,EAAQ,IACnBK,EAAYL,EAAQ,IACpBM,EAAAC,QAAA,SAAAC,EAAAC,GACA,IAAAC,GAAAN,EAAAO,QAAA,IAA6BH,IAAAG,OAAAH,GAC7BI,EAAA,GACAA,EAAAJ,GAAAC,EAAAC,GACAP,IAAAU,EAAAV,EAAAW,EAAAT,EAAA,WAAqDK,EAAA,KAAS,SAAAE,mFCRxDG,EAAQC,EAAQ,KACYA,EAAQ,IAAlCC,qBAAkBvF,QAClBwF,EAAgBF,EAAQ,KAAxBE,YAERZ,EAAOC,QAAU,SAAAnH,GAKd,IAJD+H,EAIC/H,EAJD+H,MACAC,EAGChI,EAHDgI,WACA9B,EAEClG,EAFDkG,SACGjE,EACFgG,EAAAjI,EAAA,mCACKkI,EAAgBL,EAAiBG,GACjCG,EAAWL,EAAYC,GAGvBK,EAAMT,EAAMU,QAChB,WACE,IAAKnC,EACH,OAAO,KAGT,IAAMoC,EAASC,EAAA,CAGbZ,QACArF,OACG6F,GAGCK,EAAOjB,OAAOiB,KAAKF,GACnBG,EAASD,EAAKnH,IAAI,SAAAM,GAAG,OAAI2G,EAAU3G,KAGzC,OAFQ+G,EAAOC,SAAP,CAAgB,OAAhB5C,OAA0ByC,EAA1B,IAAmCtC,KAElC0C,WAAF,GAAG,IAAH7C,OAAU0C,KAEnB,CAACvC,EAAU6B,IAGb,OACEJ,EAAMpH,cAAc6H,EAApBG,EAAA,CAA2BP,WAAYE,GAAkBjG,0BCtC7D,IAAA4G,EAAqBjC,EAAQ,KAe7B,SAAA8B,EAAAI,EAAAC,EAAAC,GAcA,OA3BA,WACA,uBAAAC,kBAAAC,UAAA,SACA,GAAAD,QAAAC,UAAAC,KAAA,SACA,sBAAAC,MAAA,SAEA,IAEA,OADAC,KAAAC,UAAAC,SAAAC,KAAAP,QAAAC,UAAAG,KAAA,mBACA,EACG,MAAAI,GACH,UAKAC,GAGAxC,EAAAC,QAAAuB,EAAA,SAAAI,EAAAC,EAAAC,GACA,IAAA1I,EAAA,OACAA,EAAAqJ,KAAAf,MAAAtI,EAAAyI,GACA,IACAa,EAAA,IADAjB,SAAAkB,KAAAjB,MAAAE,EAAAxI,IAGA,OADA0I,GAAAH,EAAAe,EAAAZ,EAAAM,WACAM,GARA1C,EAAAC,QAAAuB,EAAAO,QAAAC,UAYAR,EAAAE,MAAA,KAAAkB,WAGA5C,EAAAC,QAAAuB,oCChCA,IAAAqB,EAAAnD,EAAA,GAAAoD,EAAApD,EAAAqD,EAAAF,GAAAG,EAAAtD,EAAA,GAAAuD,EAAAvD,EAAAqD,EAAAC,GAAAE,EAAAxD,EAAA,KAAAyD,EAAAzD,EAAAqD,EAAAG,GAgBezF,IAZM,SAAA1C,GAAK,OACxB+H,EAAA1J,EAAAC,cAAA,OAAKH,UAAWoB,IAAWS,EAAM7B,UAAWqB,IAAOmD,QACjDoF,EAAA1J,EAAAC,cAAA,UACEY,IAAKc,EAAMd,IACXmJ,YAAY,IACZC,MAAM,0EACNC,iBAAe,EACf/H,MAAOR,EAAMQ","file":"component---src-templates-speakers-content-js-c2a343c69cec93f8699d.js","sourcesContent":["import React from 'react'\nimport classnames from 'classnames'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styles from './sketchnote.module.scss'\n\nconst SpeakerImage = ({ alt, image, className = '' }) => (\n  <StaticQuery\n    query={graphql`\n      query sketchnoteQuery {\n        source: allFile(\n          filter: { absolutePath: { regex: \"/speakers/sketchnotes/\" } }\n        ) {\n          edges {\n            node {\n              childImageSharp {\n                fluid(maxWidth: 1200) {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      return data.source.edges\n        .filter(({ node }) => {\n          const { src } = node.childImageSharp.fluid\n          return src.includes(image)\n        })\n        .map(({ node }, i) => (\n          <div\n            className={classnames(styles.sketchnote, className)}\n            key={`sketchnote-${i}`}\n          >\n            <a href={node.childImageSharp.fluid.src}>\n              <Img\n                fluid={node.childImageSharp.fluid}\n                alt={\n                  alt ||\n                  `Hand-drawn sketch notes summarizing the content of the talk`\n                }\n              />\n            </a>\n            <span className={styles.credit}>\n              Sketchnotes by <a href=\"https://malweene.com/\">Malweene</a>,\n            </span>\n          </div>\n        ))\n    }}\n  />\n)\nexport default SpeakerImage\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport classNames from 'classnames'\nimport MDXRenderer from 'gatsby-mdx/mdx-renderer'\nimport Button from '../components/Button/index'\nimport Layout from '../components/Layout/index'\nimport SocialMeta from '../components/SocialMeta/index'\nimport SpeakerImage from '../components/SpeakerImage'\nimport YoutubeVideo from '../components/YoutubeVideo'\nimport SketchNote from '../components/SketchNote'\n\nimport styles from '../pages/simpletext.module.scss'\nimport speakerStyles from './speaker-styles.module.scss'\n\nconst TicketButton = () => (\n  <Button\n    block={true}\n    fill={true}\n    color={'red'}\n    className={styles.ticket_button}\n  >\n    Tickets from €311\n  </Button>\n)\n\nconst Link = props => {\n  const { url, text } = props\n\n  return (\n    <a href={url} rel=\"noopener\">\n      {text}\n    </a>\n  )\n}\nfunction SpeakersContentTemplate({ data: { mdx } }) {\n  const {\n    title,\n    name,\n    bio,\n    image,\n    color,\n    from,\n    link,\n    twitter,\n    github,\n    company,\n    company_url,\n    youtube,\n    sketchnote,\n  } = mdx.frontmatter\n\n  return (\n    <Layout>\n      <SocialMeta\n        title={mdx.frontmatter.title}\n        description={mdx.frontmatter.lead}\n        image={mdx.frontmatter.socialCard || 'social-card.png'}\n      />\n      <div className={classNames(styles.simpleText)}>\n        <div className={speakerStyles.speakerpage}>\n          <div className={speakerStyles.title_column}>\n            <h3 className={speakerStyles.speaker_name}>{name}</h3>\n            <h2>{title}</h2>\n          </div>\n          <div className={speakerStyles.speaker_column}>\n            <SpeakerImage\n              className={speakerStyles.speaker_profile}\n              image={image}\n              color={color}\n            />\n\n            <ul className={speakerStyles.links}>\n              <li className={speakerStyles.link_from}>\n                <Link\n                  url={`https://www.google.com/maps/search/${from}`}\n                  text={from}\n                />\n              </li>\n              {link && (\n                <li className={speakerStyles.link_blog}>\n                  <Link url={link} text=\"Website\" />\n                </li>\n              )}\n              {twitter &&\n                twitter.map(twhandle => (\n                  <li className={speakerStyles.link_twitter} key={twhandle}>\n                    <Link\n                      url={`https://twitter.com/${twhandle}`}\n                      text={`@${twhandle}`}\n                    />\n                  </li>\n                ))}\n              {github && (\n                <li className={speakerStyles.link_github}>\n                  <Link url={`https://github.com/${github}`} text={github} />\n                </li>\n              )}\n              {company && (\n                <li className={speakerStyles.link_company}>\n                  <Link url={company_url} text={company} />\n                </li>\n              )}\n            </ul>\n          </div>\n          <div className={speakerStyles.talk_column}>\n            {youtube && (\n              <YoutubeVideo\n                src={youtube}\n                title={`${title} by ${name}`}\n                className={speakerStyles.video}\n              />\n            )}\n\n            {sketchnote && (\n              <SketchNote\n                alt={`Hand-drawn sketch notes summarizing the talk of ${name}`}\n                image={sketchnote}\n                className={speakerStyles.sketchnote}\n              />\n            )}\n\n            <MDXRenderer>{mdx.code.body}</MDXRenderer>\n\n            {bio && <hr />}\n\n            {bio}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default SpeakersContentTemplate\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    mdx(id: { eq: $id }) {\n      id\n      code {\n        body\n      }\n      frontmatter {\n        name\n        title\n        image\n        color\n        bio\n        from\n        twitter\n        github\n        company\n        company_url\n        socialCard\n        youtube\n        sketchnote\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styles from './layout.module.scss'\nimport Footer from '../Footer/'\n\nimport Header from '../Header/'\n\nconst MainLayout = props => (\n  <StaticQuery\n    query={graphql`\n      query LayoutQuery {\n        site {\n          siteMetadata {\n            title\n            keywords\n            description\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div className={styles.grid2}>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            {\n              name: 'description',\n              content: data.site.siteMetadata.description,\n            },\n            { name: 'keywords', content: data.site.siteMetadata.keywords },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header />\n        <main className={[styles.main, ...props.mainClassNames].join(' ')}>\n          {props.children}\n        </main>\n        <footer className={styles.footer}>\n          <Footer />\n        </footer>\n      </div>\n    )}\n  />\n)\n\nMainLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  mainClassNames: PropTypes.array,\n}\n\nMainLayout.defaultProps = {\n  mainClassNames: [],\n}\n\nexport default MainLayout\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","const React = require(\"react\");\nconst { useMDXComponents, mdx } = require(\"@mdx-js/react\");\nconst { useMDXScope } = require(\"./context\");\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components);\n  const mdxScope = useMDXScope(scope);\n\n  // Memoize the compiled component\n  const End = React.useMemo(\n    () => {\n      if (!children) {\n        return null;\n      }\n\n      const fullScope = {\n        // React is here just in case the user doesn't pass them in\n        // in a manual usage of the renderer\n        React,\n        mdx,\n        ...mdxScope\n      };\n\n      const keys = Object.keys(fullScope);\n      const values = keys.map(key => fullScope[key]);\n      const fn = new Function(\"_fn\", ...keys, `${children}`);\n\n      return fn({}, ...values);\n    },\n    [children, scope]\n  );\n\n  return (\n    React.createElement(End, { components: mdxComponents, ...props })\n  );\n};\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","import React from 'react'\nimport classnames from 'classnames'\nimport styles from './styles.module.scss'\n\nconst YoutubeVideo = props => (\n  <div className={classnames(props.className, styles.video)}>\n    <iframe\n      src={props.src}\n      frameBorder=\"0\"\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen\n      title={props.title}\n    />\n  </div>\n)\n\nexport default YoutubeVideo\n"],"sourceRoot":""}