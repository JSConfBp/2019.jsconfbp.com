{"data":{"mdx":{"id":"14d3514b-420e-5e99-8fd2-ed9397a9982d","code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/speakers/jorge_marin\",\n  \"name\": \"Jorge Marin\",\n  \"title\": \"Testing in production: Ideas, experiences, limits, roadblocks\",\n  \"order\": 7,\n  \"image\": \"jorge_marin\",\n  \"color\": \"yellow\",\n  \"link\": \"https://jorgemarin.xyz\",\n  \"socialCard\": \"social_card_jorge.jpg\",\n  \"bio\": \"Jorge Marín is an engineer passionate about robotics, automation, statistics and mountains. With a degree on Telecommunications Engineering he tried to help drones to navigate indoors where GPS position is not available or inaccurate. Got dragged to `the cloud` afterwards and has been working since then automating the hell of anything he touches. Currently he is taking over Dyson's testing strategy for cloud services.\",\n  \"twitter\": [\"chipironcin\"],\n  \"github\": \"chipironcin\",\n  \"from\": \"Bristol, UK\",\n  \"company\": \"Dyson\",\n  \"company_url\": \"https://www.dyson.com/en.html\",\n  \"sketchnote\": \"sketchnote-jorge\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Are you afraid of testing in production? Do you test in production? Do you use real data?\\nBy definition testing in production is hard. This talk puts together my experience testing\\nin production a large scale system that affects millions of users. Experience, ideas, limits,\\nroadblocks, tips and more.\"));\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"name":"Jorge Marin","title":"Testing in production: Ideas, experiences, limits, roadblocks","image":"jorge_marin","color":"yellow","bio":"Jorge Marín is an engineer passionate about robotics, automation, statistics and mountains. With a degree on Telecommunications Engineering he tried to help drones to navigate indoors where GPS position is not available or inaccurate. Got dragged to `the cloud` afterwards and has been working since then automating the hell of anything he touches. Currently he is taking over Dyson's testing strategy for cloud services.","from":"Bristol, UK","twitter":["chipironcin"],"github":"chipironcin","company":"Dyson","company_url":"https://www.dyson.com/en.html","socialCard":"social_card_jorge.jpg","youtube":null,"sketchnote":"sketchnote-jorge"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"14d3514b-420e-5e99-8fd2-ed9397a9982d"}}